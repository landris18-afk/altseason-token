import { useEffect } from 'react';
import { gameLevels } from '../data/gameLevels';
import { usePlayerSave } from './usePlayerSave';

/**
 * useLevelUp - Szintl√©p√©s hook
 * 
 * Ez a hook kezeli a j√°t√©k szintl√©p√©s logik√°j√°t:
 * - Szintl√©p√©s ellen≈ërz√©se
 * - Level up modal megjelen√≠t√©se
 * - Hang lej√°tsz√°s
 * - √ârv√©nytelen szintek kezel√©se
 * 
 * @param {Object} gameState - J√°t√©k √°llapot
 * @param {Function} setGameState - J√°t√©k √°llapot friss√≠t≈ë
 * @param {boolean} isLoaded - Bet√∂lt√∂tt √°llapot flag
 * @param {Audio} levelUpSound - Level up hang
 * @param {boolean} muted - N√©m√≠tott √°llapot
 * @param {Function} setIsLevelUpModalOpen - Level up modal √°llapot be√°ll√≠t√≥
 * @param {Function} confirmReset - Reset meger≈ës√≠t≈ë
 */
export const useLevelUp = (
  gameState,
  setGameState,
  isLoaded,
  levelUpSound,
  muted,
  setIsLevelUpModalOpen,
  confirmReset
) => {
  const { autoSavePlayer } = usePlayerSave();
  // Szintl√©p√©s kezel√©se
  useEffect(() => {
    if (isLoaded) {
      // Ellen≈ërizz√ºk, hogy √©rv√©nyes-e a jelenlegi szint
      if (!gameLevels[gameState.levelIndex]) {
        confirmReset();
        return;
      }

      const currentLevel = gameLevels[gameState.levelIndex];
      const nextLevel = gameLevels[gameState.levelIndex + 1];
      
      // Csak akkor n√©zz√ºk a k√∂vetkez≈ë szintet, ha van m√©g k√∂vetkez≈ë szint
      if (nextLevel && gameState.marketCap >= nextLevel.threshold) {
        if (levelUpSound && !muted) {
          levelUpSound.currentTime = 0;
          levelUpSound.play().catch(() => {});
        }
        setIsLevelUpModalOpen(true);
        setGameState(prevState => {
          const newState = {
            ...prevState,
            levelIndex: prevState.levelIndex + 1,
            minMarketCapThisLevel: nextLevel.threshold // A k√∂vetkez≈ë szint thresholdj√°t√≥l indul
          };
          
          // Szintl√©p√©s ut√°n ment√©s az adatb√°zisba
          setTimeout(() => {
            autoSavePlayer(newState).then(result => {
              if (result.success) {
                console.log('üéâ Auto-saved player after level up to level:', newState.levelIndex);
              }
            }).catch(error => {
              console.error('Auto-save failed after level up:', error);
            });
          }, 1000); // 1 m√°sodperc k√©sleltet√©s hogy a state friss√ºlj√∂n
          
          return newState;
        });
      }
    }
  }, [gameState.marketCap, gameState.levelIndex, isLoaded, levelUpSound, muted, setIsLevelUpModalOpen, setGameState, confirmReset]);
};